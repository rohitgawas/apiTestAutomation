{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-21T04:55:46.213Z",
    "end": "2024-07-21T04:55:47.595Z",
    "duration": 1382,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cf9f1c1f-366d-4a3c-8b32-d41ff536c496",
      "title": "",
      "fullFile": "cypress\\e2e\\verifyYavinData.js",
      "file": "cypress\\e2e\\verifyYavinData.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cda00ffe-4876-4dea-8694-dc6f5ce584c4",
          "title": "Verify planets data",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify Yavin planet data",
              "fullTitle": "Verify planets data Verify Yavin planet data",
              "timedOut": null,
              "duration": 1130,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(\"GET\", this.data.yavin_url).then(function (yavinInfo) {\n  expect(yavinInfo.status).to.eql(200);\n  expect(yavinInfo.body.name).to.eql(this.data.yavin_name);\n  expect(yavinInfo.body.rotation_period).to.eql(this.data.yavin_rotation_period);\n  expect(yavinInfo.body.orbital_period).to.eql(this.data.yavin_orbital_period);\n  expect(yavinInfo.body.diameter).to.eql(this.data.yavin_diameter);\n  expect(yavinInfo.body.climate).to.eql(this.data.yavin_climate);\n  expect(yavinInfo.body.gravity).to.eql(this.data.yavin_gravity);\n  expect(yavinInfo.body.terrain).to.eql(this.data.yavin_terrain);\n  expect(yavinInfo.body.surface_water).to.eql(this.data.yavin_surface_water);\n  expect(yavinInfo.body.population).to.eql(this.data.yavin_population);\n  expect(yavinInfo.body.residents).to.eql(this.data.yavin_residents);\n  expect(yavinInfo.body.films).to.eql(this.data.yavin_films);\n  cy.request(\"GET\", yavinInfo.body.films[0]).then(function (filmsName) {\n    expect(filmsName.body.title).to.eql(this.data.yavin_film_title);\n  });\n});",
              "err": {},
              "uuid": "9954e097-2bca-47cc-b03f-7d953810dacc",
              "parentUUID": "cda00ffe-4876-4dea-8694-dc6f5ce584c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9954e097-2bca-47cc-b03f-7d953810dacc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1130,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "my-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "custom-title",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "reportFilename": "my-report"
      },
      "version": "6.2.0"
    }
  }
}